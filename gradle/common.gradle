apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    // Note: make sure to update the build tools docker if you change this
    buildToolsVersion "30.0.2"

    defaultConfig {
        def gitVersionFull = "git describe --dirty --long".execute().text.trim()

        //noinspection GroovyUnusedAssignment
        def (gitVersionTag, gitVersionCommits, gitVersionSha) = gitVersionFull.tokenize('-')
        def (gitVersionMajor, gitVersionMinor, gitVersionPatch, gitVersionHotfix) = gitVersionTag.tokenize('.')
        def gitVersionHotfixClean = gitVersionHotfix ?: "0"

        versionName gitVersionFull
        versionCode gitVersionMajor.toInteger() * 10000000 + gitVersionMinor.toInteger() * 100000 + gitVersionPatch.toInteger() * 1000 + gitVersionHotfixClean.toInteger()

        minSdkVersion 23
        targetSdkVersion 30

        buildFeatures {
            viewBinding = true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/../app/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
}

ext {
    dagger_version = '2.30.1'
}

dependencies {

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'

    implementation 'com.google.android.material:material:1.3.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.fragment:fragment:1.2.5'
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.squareup.moshi:moshi:1.11.0"
    implementation('com.squareup.moshi:moshi-kotlin:1.11.0') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }

    api('com.jakewharton.threetenabp:threetenabp:1.3.0')

    //////////////
    // Moshi and Kotlin:
    // - We use 'kotlin-reflect' for debug to avoid the cost of code generation
    // - We use 'moshi-kotlin-codegen' to generate code for release (to have better performance)
    kaptRelease("com.squareup.moshi:moshi-kotlin-codegen:1.9.2")
    debugImplementation "org.jetbrains.kotlin:kotlin-reflect:1.4.21"

    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation("com.squareup.okhttp3:okhttp-brotli:4.9.0")

    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    implementation 'com.google.guava:guava:30.0-android'

    api "androidx.room:room-runtime:2.2.6"
    api "androidx.room:room-ktx:2.2.6"
    kapt "androidx.room:room-compiler:2.2.6"
}
